[gd_scene load_steps=12 format=3 uid="uid://c0b7x6yey1afb"]

[ext_resource type="Script" uid="uid://ojq5mgty5nt4" path="res://build_coveyor_belt_system/build_system.gd" id="1_lb7pt"]
[ext_resource type="Texture2D" uid="uid://cheye2smkiwdq" path="res://3D_belts/arow.png" id="2_wx4n1"]

[sub_resource type="Environment" id="Environment_2y3eo"]
background_mode = 1
ambient_light_source = 2
ambient_light_color = Color(1, 1, 1, 1)

[sub_resource type="StandardMaterial3D" id="StandardMaterial3D_wx4n1"]
shading_mode = 0
albedo_color = Color(0, 1, 1, 1)

[sub_resource type="SphereMesh" id="SphereMesh_lbod0"]
material = SubResource("StandardMaterial3D_wx4n1")

[sub_resource type="StandardMaterial3D" id="StandardMaterial3D_lb7pt"]
albedo_color = Color(0, 0, 1, 1)

[sub_resource type="PlaneMesh" id="PlaneMesh_wx4n1"]
material = SubResource("StandardMaterial3D_lb7pt")
size = Vector2(100, 100)

[sub_resource type="BoxShape3D" id="BoxShape3D_lbod0"]
size = Vector3(100, 1, 100)

[sub_resource type="Shader" id="Shader_8onl7"]
code = "// NOTE: Shader automatically converted from Godot Engine 4.4.1.stable's StandardMaterial3D.

shader_type spatial;
render_mode blend_mix, depth_draw_opaque, cull_back, diffuse_burley, specular_schlick_ggx;

uniform vec4 albedo : source_color;
uniform sampler2D texture_albedo : source_color, filter_linear_mipmap, repeat_enable;
uniform ivec2 albedo_texture_size;
uniform float point_size : hint_range(0.1, 128.0, 0.1);

uniform float roughness : hint_range(0.0, 1.0);
uniform sampler2D texture_metallic : hint_default_white, filter_linear_mipmap, repeat_enable;
uniform vec4 metallic_texture_channel;
uniform sampler2D texture_roughness : hint_roughness_r, filter_linear_mipmap, repeat_enable;

uniform float specular : hint_range(0.0, 1.0, 0.01);
uniform float metallic : hint_range(0.0, 1.0, 0.01);

uniform vec3 uv1_scale;
uniform vec3 uv1_offset;
uniform vec3 uv2_scale;
uniform vec3 uv2_offset;

void vertex() {
	UV = UV * uv1_scale.xy + uv1_offset.xy;
	UV.x -= TIME * 2.0;
}

void fragment() {
	vec2 base_uv = UV;

	vec4 albedo_tex = texture(texture_albedo, base_uv);
	ALBEDO = albedo.rgb * albedo_tex.rgb;

	float metallic_tex = dot(texture(texture_metallic, base_uv), metallic_texture_channel);
	METALLIC = metallic_tex * metallic;
	SPECULAR = specular;

	vec4 roughness_texture_channel = vec4(1.0, 0.0, 0.0, 0.0);
	float roughness_tex = dot(texture(texture_roughness, base_uv), roughness_texture_channel);
	ROUGHNESS = roughness_tex * roughness;
}
"

[sub_resource type="ShaderMaterial" id="ShaderMaterial_lbod0"]
render_priority = 0
shader = SubResource("Shader_8onl7")
shader_parameter/albedo = Color(1, 1, 1, 1)
shader_parameter/texture_albedo = ExtResource("2_wx4n1")
shader_parameter/albedo_texture_size = Vector2i(512, 512)
shader_parameter/point_size = 1.0
shader_parameter/roughness = 1.0
shader_parameter/metallic_texture_channel = Vector4(1, 0, 0, 0)
shader_parameter/specular = 0.5
shader_parameter/metallic = 0.0
shader_parameter/uv1_scale = Vector3(1, 10, 1)
shader_parameter/uv1_offset = Vector3(0, 0.645, 0)
shader_parameter/uv2_scale = Vector3(1, 1, 1)
shader_parameter/uv2_offset = Vector3(0, 0, 0)

[sub_resource type="Curve3D" id="Curve3D_lb7pt"]

[node name="BeltSystem" type="Node3D"]
script = ExtResource("1_lb7pt")

[node name="WorldEnvironment" type="WorldEnvironment" parent="."]
environment = SubResource("Environment_2y3eo")

[node name="Camera3D" type="Camera3D" parent="."]
transform = Transform3D(1, 0, 0, 0, -4.37114e-08, 1, 0, -1, -4.37114e-08, 0, 2, 0)
projection = 1
size = 20.0

[node name="indicator" type="MeshInstance3D" parent="."]
mesh = SubResource("SphereMesh_lbod0")

[node name="floor" type="MeshInstance3D" parent="."]
mesh = SubResource("PlaneMesh_wx4n1")

[node name="StaticBody3D" type="StaticBody3D" parent="floor"]

[node name="CollisionShape3D" type="CollisionShape3D" parent="floor/StaticBody3D"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, -0.5, 0)
shape = SubResource("BoxShape3D_lbod0")

[node name="belt" type="CSGPolygon3D" parent="."]
polygon = PackedVector2Array(0, 0, -0.5, 0.5, 0.5, 0.5)
mode = 2
path_node = NodePath("Path3D")
path_interval_type = 0
path_interval = 0.01
path_simplify_angle = 10.0
path_rotation = 2
path_rotation_accurate = false
path_local = false
path_continuous_u = true
path_u_distance = 1.0
path_joined = false
material = SubResource("ShaderMaterial_lbod0")

[node name="Path3D" type="Path3D" parent="belt"]
curve = SubResource("Curve3D_lb7pt")
